.header{
  height: 100vh;
  min-height: 700px;
  overflow: hidden;
  position: relative;
  @include media-breakpoint-down(lg){
    overflow: visible;
  }

  // для 3d проектов
  // perspective: 1000px; следует задавать непосредственному родителю того класса, к которому применяем GSAP (это блок .content)
  // В нашем случае непосредственным родителем блока «.content» является класс «.card-header».
  perspective: 1000px;
  &:before{
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url('../img/russia.svg') center no-repeat;
    opacity: .02;
    transform: scale(1.3);

    @media (max-width: 1366px){
      transform: scale(1);
    }
    @include media-breakpoint-down(sm) {
      display: none;
    }
  }

  &__top-line{
    position: absolute;
    width: 100%;
    padding: 60px 0;
    z-index: 100;
    @include media-breakpoint-down(lg){
      position: relative;
      padding: 30px 0;
    }
    .container-fluid{
      max-width: 1680px;
    }
    .button{
      @include media-breakpoint-up(sm){
        margin-right: 50px;
      }
      @include media-breakpoint-down(md){
        margin-right: 15px;
      }
    }
  }
  &__logo{
    font-size: 26px;
    color: #fff;
    font-weight: bold;
    padding: 10px;
    text-decoration: none;
    @include media-breakpoint-up(md) {
      margin-left: 40px;
    }
    span{
      font-weight: 300;
      transition: color 1s ease;
    }
    &:hover{
      color: #fff;
      span{
        color: $accent;
      }
    }
  }

  &__content{
    //height: 100%;
    min-height: 100%;
    padding: 160px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    @include media-breakpoint-down(lg) {
      padding: 50px 0 80px 0;
    }
    @include media-breakpoint-down(md) {
      padding: 30px 0;
    }
    h1{
      font-size: 31px;
      line-height: 43px;
      margin-bottom: 38px;
      strong{
        color: $accent;
        white-space: nowrap;
        span{
          font-weight: 300;
          color: #fff;
        }
      }
    }
    h1, p, a{
      padding-left: 20px;
    }
  }

  &__trylink{
    color: $accent;
    font-weight: bold;
    margin-top: 20px;
    display: inline-block;
    font-size: 16px;
    text-decoration: none;
    transition: color 0.1s ease-in-out;
    @include media-breakpoint-down(lg){
      margin-top: 10px;
      margin-bottom: 30px;
    }
    i{
      display: inline-block;
      font-style: normal;
      font-weight: 300;
      font-size: 25px;
      color: #fff;
      width: 36px;
      height: 36px;
      border-radius: 100%;
      line-height: 32px;
      margin-right: 10px;
      background-color: $accent;
      text-align: center;
    }
    &:hover{
      color: #fff;
      transition: color 0.1s ease-in-out;
    }
  }

  &__card{
    position: relative;
    width: 458px;
    height: 288px;
    display: inline-block;
    //zoom: .98;
    zoom: .9;
    > img{
      position: absolute;
      opacity: 0;
      transition: all 1s ease;
      @include media-breakpoint-down(lg){
        display: none;
      }
    }
    @include media-breakpoint-down(lg){
      background-image: url('../img/dist/card.png');
      background-size: cover;
      width: 100%;
      height: auto;
      aspect-ratio: 958 / 616;
    }
    &-logo-w{
      z-index: 12;
      top: 45px;
      right: 45px;
      width: 120px;
    }
    &-chip{
      z-index: 12;
      left: 45px;
      top: 80px;
    }
    &-number-holder{
      z-index: 12;
      left: 45px;
      top: 158px;
      zoom: 3.5; // для эффекта падения текста на карту
    }
    &-valid{
      z-index: 12;
      top: 194px;
      right: 211px;
      zoom: 3; // для эффекта падения текста на карту
    }
    &-russia{
      z-index: 11;
      top: 20px;
      left: 22px;
      width: 420px;
      //opacity: .07;

    }
    &-l-main{
      left: 0;
      z-index: 10;
    }
    &-l2-main{
      //top: 10px;
      //left: -10px;
      top: 30px;
      left: -50px;
      z-index: 8;
    }
    &-l3-main{
      //top: 20px;
      //left: -20px;
      top: 60px;
      left: -100px;
      z-index: 6;
    }
  }
}

// Класс «preserve» должен находиться на каждом уровне цепочки DOM при сложной вложенной структуре сцены,
// начиная от класса с «perspective: 1000px» до непосредственных родителей элементов, размещённых в 3D-пространстве
// он необходим, чтобы показать, что у родителя находятс 3d эл-ты
.preserve{
  transform-style: preserve-3d;
  @include media-breakpoint-down(lg){
    transform-style: flat;
    transform: rotate(0) !important;
  }
}

// Классы уровней по возрастанию, чтоб разместить слои на разном расстоянии по оси Z:
// level--2 (уровень минус 2)
// level--1 (уровень минус 1)
// нулевой уровень без класса
// level-1 (уровень один)
// level-2 (уровень два)
.level--2{
  transform: translateZ(-70px);
}
.level--1{
  transform: translateZ(-35px);
}
.level-1{
  transform: translateZ(20px);
}
.level-2{
  transform: translateZ(40px);
}